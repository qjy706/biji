1 JSON
    1.JS 对象　
        语法:
            1.通过一对{}表示一个对象　
            2.在大括号中允许通过key:value的形式来表示属性　
            3.多对的属性和值之间使用，隔开　
                值可以通过对象.键

    2   什么是JOSN
    javsScript Object Notation
                        表现形式　
    按照JS对象的格式所构建出来的字符串就是JSON串
    在ajax中，允许将复杂格式的响应数据(如列表等)构建成JSON格式的字符串再进行响应输出
    　

    3.  JSON的表现
    1.  JSON表示单个对象
        1.使用{}表示单个对象　
        2.在{}中使用key:value的格式表示数据
        3.多对属性和值之间使用，隔开
        4.key必须使用''引起来
        5.value如果是字符串的话，也需要用""引起来　必须双引！！



            var arr = [
                {
                    "name":"mrwang",
                    "age":37,
                    "gender":"男"
                },
                {
                    "name":"王夫人",
                    "age":15,
                    "gender":"男"
                }

            ];


    4   使用jq的each()迭代数组
    1.  $.each();
        语法: $.each(arr,function(index,obj){
                //arr   数组
            //index : 遍历出来的元素的下标
            //obj :　表示遍历出来的元素

        });



//each也可以迭代标签　  也可以$('div').each(function(i,obj){}) 来给标签添加东西　
    2.  $(arr).each();
        语法　：　
            $(arr).each(function(index,obj){
                //index 遍历出来的元素的下标
                //obj 表示遍历出来的元素

            });

            该函数用于循环遍历　$obj元素




2.  后台处理JSON
    在后台查询数据时，需要先将数据转换为JSON格式的字符串，再响应给客户端，到了前段后再将
    字符串转换为JS对象再进行解析.

    1.步骤
        1.后台先获取数据　　如果是类　需要写一个方法　来把对象属性变成键值对的形式　
        数据类型为　：
        1.元组
        2.列表
        3.字典

    2.  在后台将数据转换为符合JSON格式的字符串
    3.  在后台将JSON格式字符串进行响应
    4.  在前段将JSON格式的字符串解析成JS对象　


    ２．python中的JSON处理
        使用python中的json类　可以完成转换　

        import json
        json.dumps(元祖|列表|字典)
        return jsonStr

        可以现在映射的类中创建一个方法　该方法用来创建一个有对象属性和值组成的字典　


3.  前端中的json处理
        通过以下方式,将json的串转换为JS对象或数组
        在JS中　: JSON.parse(JSON串)


      JSON.stringify() 方法是将一个JavaScript值(对象或者数组)转换为一个 JSON字符串，如果指定了replacer是一个函数，则可以替换值，或者如果指定了replacer是一个数组，可选的仅包括指定的属性。








