1 表单控件
　　　１．　下拉选择框 
　　　　　<select name='province'>
        <option value='hebei'>河北</option>

     </select>

    2.文本域
        支持用户多行输入
        　　　　<textarea name='uinfo' cols='' rows=''></textarea>
    标签中间不用写内容
        属性：　
            1.name 空间名称　
            2.cols 指定文本域默认显示的列数　一行能显示的英文字符数量
            　　中文字符减半
            3.rows 指定文本域默认显示的行数

        注意: 文本域是可以由用户调整大小的


    3 按钮
        1.提交按钮
            <input type='submit' name='' value=''></input>
            属性：　
                type = 'submit'  设置按钮类型为提交
                value 用来设置按钮的显示文本 
            作用：　讲表单中的数据提交给服务器

        2.重置按钮
            <input type='reset' value=''>
            作用：　讲表单控件的值重置为初始状态
            value默认重置


        3.普通按钮
            <input type='button' value=''>

            get请求键值对形式　name的名称和输入的值对应起来

    4 特殊按钮
        <button></button>
        注意：　<button>标签如果放在form中使用，作用跟提交按钮是一致的
        　　　　　　都会将表单中的数据发送给服务器

            <button>标签不限于form使用，在任何地方都可以使用，表示按钮
            但是如果放在form外部需要绑定自定义事件　command

必须绑定name属性的　文本框　密码框　文本域　下拉选择框 里面需要输入输出的


    5 label for ID 
        <input type="radio" name="gender" value='male' checked id='male'>
        <label for="male">男</label>
        1.　使用label标签包含要显示的文本
        2. 为了label标签添加for属性，属性值与要绑定的控件的id属性值保持一致


2  CSS
    1.CSS介绍　
        CSS: Cascading Style Sheet 层叠样式表
        作用：　实现网页布局，美化页面元素

    2.CSS使用
        在HMTL文档中使用CSS,主要有三种方式
        1.行内样式/内联样式/
            特点：　在具体的HTML标签中引入CSS代码
            语法：　
                所有的HTML标签都具有一个style属性
                属性值就可以使用CSS样式规则
                <标签 style='CSS样式规则'></标签>
                CSS样式规则　: 
                    由CSS属性与值组成,属性名与值之间使用:隔开
                    每一条CSS语句以分号结束
                    color : red; 
                    <h1 style='color:red'>大标题</h1>

                常见的css属性：
                    １．font-size : 设置字体大小，取值为像素值　h1为32px
                    ２．color : 设置字体颜色
                    ３．background-color : 背景颜色

        2.文档内嵌
            将css代码从标签中分离出来，单独写在一起
            1.在html文档中使用<style></style>引入样式表
                <style>标签可以在文档的任意地方使用
            2.样式表语法：
                <style>
                CSS选择器{
                属性　: 值；
                属性:值;
                }
                </style>

                选择器：　用来匹配文档中元素，并且为其设置样式{}中是要给元素添加
                的样式声明

                et:
                    标签选择器　：　根据给定的标签名，匹配文档中所有的该元素，并应用样式

            CSS注释　# /* xxxx */
            html注释　<!-- -->

            3 外部样式表/外联方式　
                创建外部的CSS文件　在html文档中只需引入外部样式表即可　
                优点：
                    1.真正实现了样式与结构的分离，便于维护
                    2.可以实现样式的复用

                使用：　
                    １．创建外部的CSS文件　.CSS
                    2. 在HTML文档中使用
                    <link rel="stylesheet" type="text/css" href="./css.css">引入样式表文件

                    3.在样式表中添加样式

    3.样式表的特点：
        1.层叠性　
            多个CSS样式共同作用于元素
            et:
                p{
                color:red;
                background-color:green;
                font-size:32px
                }
        2.继承性
            父元素中设置的样式，子元素可以继承下来
            大部分文本相关的属性，都可以被继承(超链接除外)
            块级元素的宽度与父元素保持一致；
            　　<h></h><div></div><p></p>

        3.样式表的优先级
            只有发生样式冲突时，才会考虑优先级
            优先级从低到高：　
                        １．继承样式
                        ２．浏览器的缺省设置(默认样式)
                        ３．文档内嵌方式/外链方式 设置的样式
                            相同的优先级，发生样式冲突时，由代码
                            的书写顺序决定最终样式，后来者居上
                        4.行内样式优先级最高

3.CSS选择器
    1.选择器介绍　：
        作用　：　根据指定的选择模式匹配文档中元素，并为其设置样式
        选择模式：选择符，指匹配元素的依据
    2.分类　：　
        １．标签选择器(元素选择器)
            根据标签名，匹配文档中所有的该元素
            语法：
                标签名{属性:值
                }
        练习　新建一个文件，创建超链接，设置超链接　
        文本色为红色，字体大小为20像素，
        取消下划线(text-decoration:none;)
        
        使用：
            常用于清除页面默认样式，以及设置基础样式

        2.类选择器
            根据元素的class属性值进行匹配
            语法：以英文.开头，后面class属性值  一个元素标签可以写多个类　<p class='c1 c2'>
            et:
            <style>
                .c1作为选择器
                .c1{color:red;}
            </style>

            <p class='c1'></p>


            注意：
            １．写选择器时，不要随便出现任何符号
            ２．类名自定义，禁止以数字开头，可以出现 - 数字　字母
                尽量见名知意

            ２．组合使用　：　
                选择器１选择器２{

                }
                匹配同时满足选择器１和选择器２的元素，并设置样式
                et:
                p.c1{} 标签与类名组合使用，标签在前，类名在后

                错误写法：　.c1p{}匹配类名为c1p对应的元素
                .c1.c2{}  不常用，可以直接给c1 或者 c2添加样式

            ４　每个元素都具备class属性，也可以使用多个类名，多个类名之间使用
            　　　空格隔开　
                e.t.
                <p class='c1 c2 c3'></p>

        3 ID选择器
            根据元素的id属性值匹配元素
            每个元素都具备id属性，并且id属性具有唯一性
            语法：
                以＃　开头，跟上id属性值
                ＃id属性值{}
            使用：
                通常页面中具有唯一性的元素，都可以使用id进行标识，
                并使用id选择器添加样式
                页面中具有唯一性的元素:外围结构标签，搜索框

            注意：
                １．id属性具有唯一性，不能重复使用相同id值
                    当使用js获取页面元素时，id是元素唯一的标识
                    如果出现重复，后面的元素都获取不到

                ２．id选择器与class选择器的区别
                    id具有唯一性，id选择器定义的样式不能被服用　
                    class可以重复使用，类选择器定义的样式可以复用

                ３．具有唯一性的元素都可以使用id选择器设置样式，
                    外部的结构标签使用id标识，内部的标签使用class标识

        ４　群组选择器
            为一组元素统一设置样式
            语法
                选择器１，选择器２，选择器３{}

                margin 表示外边距  像素为单位 margin:10px 上下为10 左右自动
        5 后代选择器
            依托元素的层级关系匹配后代元素，
            后代元素包含直接子元素和间接子元素

            语法：
                选择器１ 空格 选择器２{样式规则}
                选择器１与选择器２之间是父元素与后代元素的关系
                作用　：　在选择器１匹配到的元素中，查找满足选择器２的后代元素

        6 子代选择器
            依托元素的层级关系，匹配直接子元素
            语法：　
                选择器１　> 选择器２{}

        7 伪类选择器
            １，作用：　针对元素的不同状态设置样式
            ２．分类：　
                １．超链接伪类选择器
                    主要针对超链接的不同状态设置样式
                    :link 超链接访问前的状态
                    :visited 超链接访问后的状态
                ２．动态伪类选择器
                    １．:hover 对所有元素都可以用　表示鼠标悬停时的状态
                　　　　２．:active 表示鼠标点按时的状态
                    ３．:focus 表示获取焦点时的状态　常见于输入框接收用户输入时，就表示获取到焦点

            ３．使用：
                １，伪类选择器必须与其他选择器结合使用，伪类选择器是给元素不同的状态设置样式
                ２．设置超链接四种状态下的样式　　　　
                    a:link{}   访问前的状态
                    a:visited{}  访问后的状态
                    a:hover{}    鼠标悬停时状态
                    a:active{}   鼠标点按时状态
                    书写顺序　　LoVe HAte

                3．表单元素获取焦点（针对输入框）
                    input:focus{}
                    轮廓线　outline 













