1 css　布局方式
    １．布局：　设置元素在网页中的排列方式及显示效果
    ２．分类：
        １．标准流布局（文档流，普通流，静态流）
            是默认的布局方式
            特点：将元素按照书写顺序及元素类型
            　　　　　，将元素从上至下，从左至右排列

        ２．浮动布局
            设置元素浮动
                属性　：　float 
                取值　：　left/right/none(默认值)
个人理解　把float想象成页面上方有一层隐藏的界面，float之后，元素浮动到隐藏界面中，
        下界面元素向浮动元素位置占位，上界面正常运动　左右浮动就是在隐藏界面中进行　想象成实体
            依次停靠在前一个元素边缘

            浮动元素的特点：
                １．元素设置浮动(left/right),会脱离文档流，实际效果在文档中不占位
                    后面正常元素会向前占位，浮动元素会'悬浮'在文档流上方

跟margin类似　上下合并　左右相加
                ２．元素设置浮动，会从它当前所在文档中的位置脱流　向左向右浮动

                ３．多个元素同时左浮或者右浮动，浮动元素会依次停靠在前一个浮动元素的边缘
                    中间没有缝隙(可以解决水平缝隙问题)

                ４．浮动元素会在父元素的尺寸范围内浮动，当多个浮动元素无法并排显示（父元素宽比浮动元素总宽小就会换行），
                    会自动换行,停靠在其他元素边缘

                ５．任何元素只要设置浮动，就具有块元素的特征，可以手动调整宽高

                ６．浮动有顺序　d1浮动　d2正常元素　d3相右元素　那么d3会在d2下面的右边

                    d1{

                        background-color:pink;
                        float:left;
                    }

                    d2{
                        background-color: green;
                        float:right;
                        d1脱离文档流，d2向上占位之后在向右边浮动

                ３．浮动引发的特殊效果：
                    文字环绕效果：
                        浮动元素脱流，在文档中不占位，后面正常元素会向前占位，可能被浮动元素遮挡
                        但浮动元素只会遮挡正常元素的尺寸区域,不会遮挡正常文本内容，文本会围绕在
                        浮动元素周围显示，所以叫文字环绕


                ４．元素浮动引起的问题：
                    子元素如果全部设置浮动，在文档中不占位，父元素高度为０（父元素不设置高度　则高度根据元素高度决定）　display:none;也是不占位的隐藏
                    １．父元素的背景图片和背景颜色无法显示
                    ２．父元素高度为０　父元素后面的正常元素会上移，影响布局　　因为父元素不设置高度　全靠内部元素高度　，内部元素脱流　父元素没有高度　就不会显示　　
                     解决：　
                            １．为父元素指定高度  但是要知道设置浮动元素的高度　否则会溢出
                            ２．设置父元素 overflow:hidden  
                            ３．清除浮动　
                             属性　：　clear
                                取值　：　left/right/both
                                使用　：　
                                  为正常元素添加clear属性，清除浮动元素
                                  left : 表示正常元素左边不允许出现浮动元素
                                  both : 表示正常元素不受浮动元素影响　
        
                             1.解决父元素末尾添加空的块元素
                             2.为空的块元素设置clear:both;

间隙消除　外边距　font-size=0 浮动方法
        
        ３．定位布局　
            １．定位布局　：　通过调整元素的位置，实现网页布局
            ２．属性　：　position 
                取值　：　
                    １．static : 默认值，使用文档流布局
                    ２．relative : 相对定位
                    ３. absolute : 绝对定位
                    ４．fixed : 固定定位　
                注意　：　只有元素设置　position 属性为　relative /absolute / fixed
                        三者之一　，才认为元素是'已定位的元素'

            3.偏移属性　
                使用top / bottom / left / right 偏移属性　
                调整已定位元素的位置　
                １．top : 取像素值，可正可负
                        正值表示元素向下移动，负值向上

                2.  bottom : 同样取像素值　可正可负
                        正值表示元素向上移动　，负值向下

                ３．　left : 
                        正值元素向右，负值向左　

                ４．　right : 
                        正值表示元素向左，负值向右移动　

            ４．分类　：　
                １．相对定位　position : relative 
                    元素设置相对定位之后，可以使用偏移属性调整元素位置　
                    相对定位的元素是参照元素在文档中多个原始位置进行偏移
                相对的是自己　　根据自己的原有位置偏移一定距离！！！　
                    特点　：　
                        相对定位的元素不会脱离文档流,　
                        在文档中始终保留它的原始位置.

                2.  绝对定位 position : absolute
                        绝对定位的元素会脱离文档流（在文档中不占位）效果类似于浮动　之后的元素会向上移动
                        绝对定位的元素参照一个离他最近的已定位的祖先元素进行偏移　
                          如果父元素没有定义宽高　会参照浏览器窗口的（0,0）偏移

                    使用　：　
                        采用'父相子绝'的方式实现元素的绝对定位，父元素采用相对定位
                        子元素使用绝对定位，
                        实现子元素参照父元素的(0,0)点偏移

                3.  固定定位　position:fixed;
                    特点　：　
                        １．固定定位的元素，永远都参照浏览器窗口进行偏移　
                        ２．固定定位的元素，会被定位在窗口的某个位置，
                            不会跟随网页滚动而滚动

            5.  调整已定位元素的堆叠次序     .c1:hover,.c2:hover{z-index:1;}仅限于兄弟元素　且都已经定位
                属性　：　z-index     必须要先定位
                取值　：　无单位的数值，默认为0 数值越大　元素越靠上显示

                注意　：
                    １．z-index 属性只能在已定位的元素中使用
                    ２．兄弟元素之间可以通过z-index 数值的大小
                        调整堆叠阵容

                    ３．父子元素之间，永远是子元素在上，无法通过
                        z-index 调整父子元素的堆叠次序　

                    ４．如果兄弟元素的z-index取值相同，后来者居上
                        那个元素在后面　哪个元素在上方显示　


2  元素显示效果　　 
    1. display;
        display:None; 元素不占位子的隐藏　可以用伪类来做一个简单的菜单　


    2. visibility;
        visibility:hidden       元素占位子的隐藏　

    3. 透明度设置
        １．属性　：　opacity 
        ２．取值　：　0(透明) - 1(不透明)
        ３．注意　：　
            １．元素使用opacity设置半透明，所有显示的内容(
                背景颜色，文本颜色等) 父元素设置　子元素同样起作用
            ２．opacity是对元素整体透明度的设置，包含元素自身和内部的子元素.

            ３．子元素同时设置透明度，最终的透明度值是在父元素opecity取值的基础
                上再次进行透明度设置　
                et :
                    父元素　opacity : .5 ;
                    子元素　opacity : .5;
                    子元素最终的透明度为　.5* .5 = .25 


    ４．行内块元素　　img input button 　的垂直对其方式　
        属性　：　vertical-align:  
        取值　：　top / middle / bottom
        作用　：　调整行内块元素与其自身的
                
    ５．　设置鼠标形状
        属性　：　cursor 
        取值　：　
            １　．　default 默认值　
            ２　．　pointer 鼠标在元素上展现为手指的样式
            ３　．　text    鼠标展示为"I"
            4  ：　crosshair　　　鼠标展示为'+'

    6 . 列表相关属性
        列表自带内外边距和项目符号
        1.list-style-type:
            设置项目符号
            取值　：　
                １　none 
                2 disc 实心圆点　
                3 circle 空心圆点
                4. square 实心方块

        ２　list-style-image
            指定图片作为项目符号　
            取值　: url 

        3 list-style-position
            指定项目符号的显示位置　
            默认项目符号显示在内容外部，在内边距　左边的padding中展现　
            取值　：　
                １．　outside 默认值　
                ２．　inside　设置项目符号显示在内容区域


