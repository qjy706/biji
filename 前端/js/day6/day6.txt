    3.  事件
        １．事件是由用户行为激发的操作
        ２，事件处理函数
            １，鼠标事件
                onclick     单击
                ondblclick   双击
                onmouseover 鼠标移入元素
                onmouseout  鼠标移出元素
                onmousemove 鼠标在元素内移动

            2.  加载完毕后执行
                window.onload      元素或文档加载完毕之后触发

            ３．　状态改变时间
                    常用于表单元素
                    onfocus  表单元素获取到焦点时触发
                    onblur   失去焦点时触发
                    onchange    元素内容发生改变，并且元素失去焦点时触发
                    oninput   实时监听输入，只要输入内容发生变化，都会触发
                    onsubmit    当表单被提交时触发
                                当用户点击提交按钮时，自动触发，用来验证表单是否可以提交给服务器　允许返回布尔值，表示数据是否可以发送．

            ４．　键盘事件
                onkeydown   键盘按键被按下时触发
                onkeyup     按键抬起时触发
                onkeypress  键盘按压时触发

        3.  事件绑定方式
                将事件处理函数绑定到元素节点上，由用户对元素节点的不同操作
                触发相应的事件
                １．内联方式
                    在标签中通过属性的方式绑定事件
                    <button onclick='alert('单击')'>点击</button>

                2.  JS　动态绑定事件
                    div.onclick = function(){
                        //事件触发后要执行的操作
                    }

                3.  W3C 标准事件监听
                    div.addEventListner('click',function(){});
                    function clickEvent(){

                    }

                    div.addEventListner('click',clickEvent)；　　

                4.  this　关键字　
                        this　表示当前函数或方法的调用者
                        1.全局变量有window调用，所有全局函数中的this指的是window对象

                        ２．事件处理函数中使用this,指的是当前事件的触发对象

        ４．　事件对象
            １．事件对象伴随事件触发产生，包含当前事件相关的所有信息
            ２．获取事件对象
                事件对象伴随事件发生自动产生，由浏览器以参数的形式传入到事件处理函数中，我们只需要接收参数就可以
                et:
                    function fn(evt){
                        console.log(evt);
                    }
            3   事件对象的属性
                １．target / srcElement 
                    表示当前事件的触发对象  跟this很像
                    et:
                        console.log(evt.target);

                2.  不同的事件类型对应的事件对象中包括的信息也不同
                    １．鼠标事件对象常用属性
                        １．offsetX offsetY
                            获取鼠标在元素上的坐标位置
                            默认元素左上角为原点

                        ２．　clientX clientY 
                            获取鼠标在网页上的坐标位置

                        ３．　screenX screenY
                            获取鼠标在屏幕上的坐标信息　

                    2.  键盘事件对象常用属性　
                        1 onkeydown事件 
                            1.  which 属性　
                                获取当前按键的键码
                                对于大小写字母不进行区分

                        ２．onkeypress
                            1.key 属性　
                                获取当前按键对应的字符

                            ２．which　属性　
                                获取按键对应的ASC码，区分大小写

        ５．　事件处理机制
            １．事件传递：
                当页面元素触发事件时，其他相关元素都会接收到这个事件，可以选择对事件作出处理

            ２．事件传递机制
                指页面中元素处理事件的顺序
                分流
                    １．冒泡
                        冒泡传递指事件由里向外传递，是默认的传递机制

                    ２．捕获　
                        捕获指事件从外向里传递，IE不支持

                W3C标准事件监听函数  DOM是w3c的标准
                    １．addEventListener(param,fun,boolean)
                        参数　：
                            param : 事件函数名，取消on前缀 
                                on是触发的意思
                                et : 'click'
                            fun   ：　事件触发要执行的操作，通常以匿名函数给出

                            boolean : 默认为false  可以省略，表示冒泡传递
                                    设置为true,表示捕获传递

                    ２．　阻止事件传递
                        evt.stopPropagation()








var xxx =　getAttribute('attrName')　　获得属性值　

elem.attrName = '';