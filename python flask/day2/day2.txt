1   模板 - templates
    1.  什么是模板　
        模板　在flask中就是允许响应给用户看的网页　
        在模板中，允许包含'占位变量'来表示动态的内容
        模板最终也会被解析成字符串再响应给客户端，这一过程通常称为'渲染'


        flask中的渲染是依赖于Jinja2的模板系统

    2.  模板的设置
        默认情况下，flask会在程序文件夹中的templates的子文件夹中搜索模板　html  flask文件不能在templates文件夹中

        默认情况下，需要手动创建    templates　文件夹　

    3.  模板的渲染
        作用　：　在视图中，将模板文件(xx.html)渲染成字符串之后，再响应给客户端浏览器　
        函数　：　render_template('xxx.html')
                返回值　：　字符串　　return render_template('xxx.html')

    4.  模板中的语法（重难点）
        1.变量　
            变量是一种特殊的占位符，告诉模板引擎该位置的值是从渲染模板时的数据中获取出来的

            在视图中　
            @app.route('/')
            def index():

                return render_template('xxx.html',变量１=值１,变量２=值２)

            在模板中
            {{变量名}}
            <h1>{{name}}</h1>

            练习．
            在01-template.html基础上，完成下列效果显示　：　
            歌名　：　<绿光>
            作词　：　宝强
            作曲　：　乃亮
            演唱　：　羽凡　

            locals() : 将当前函数内所有的局部变量封装成一个字典　

        2   过滤器
            1.什么是过滤器
                过滤器实允许在变量输出前改变变量的值　
            2.  语法　
                {{变量|过滤器}}

                Jinja2　模板中常见过滤器
                过滤器名　           说明
                capitalize          首字符变大写，其他变小写
                lower               将值转换为小写
                upper               将值转换为大写形式　
                title               当前变量中每个单词首字符变大写　
                trim                将值两边的空格给去掉　


            3.  标签　
                １．什么是标签
                    每个标签标示的是不同的服务器端的功能　

                ２．常用标签
                    1.  if标签
                        1.  基本if结构
                            {% if 条件 %}
                            {% endif %}

                        2.  if...else ...结构
                            {% if 条件　%}
                                满足条件时要运行的代码　
                            {% else %}
                                不满足条件时要运行的代码　
                            {% endif %}

                        3.  {% if 条件１ %}
                            {% elif 条件２ %}

                    2.  for标签　
                        {% for 变量　in 元祖|列表|字典| %}
                        {% endfor %}


                    在Jinja2　模板的循环中，支持内部变量　-loop
                    loop作用：记载当前循环中的一些相关信息　
                    loop 常用属性
                        １．index
                            用法  loop.index
                            作用　　记录当前循环的次数，从１开始记录　

                        2.  index0
                            用法  loop.index0
                            作用　　同上　从0开始记录　

                        ３． first 
                            用法  loop.first
                            作用　　值为True,则表示当前循环是第一次循环

                        ４．last
                            用法  loop.last 
                            作用　　值为True,则表示当前循环是最后一次循环　

    {% for value in params.list　%}
        <h2 style="background-color: 
        {% if loop.first %}
            red
        {% elif loop.last %}
            yellow
        {% else %}
            deeppink
        {% endif %}
        ;">{{value}}</h2>
    {% endfor %}  最推荐！！

                    3.  macro 标签　(宏)
                        1.作用　
                            相当于是在模板中声明函数　
                        ２．语法　
                            使用{% marco %}标签来声明宏

                            {% marco 名称(参数列表)%}
                                xxxxxx
                            {% endmarco %}

                        3.  在独立的文件中声明宏
                            １．创建macro.html模板文件
                                作用　定义项目中要用到的所有宏

                            ２．在使用网页中　，导入macro.html
                            {% import 'macro.html' as macro %}

                        4.  include 标签
                            将其他的模板文件包含到当前的模板文件中
                            语法　{% include 'xxx.html' %}

                        5.  静态文件处理
                            1.什么是静态文件
                                在flask中不能与服务器动态交互的文件都是静态文件，
                                如：图片　css文件，js文件，音视频文件　

                            ２．静态文件的处理
                                1.所有的静态文件必须放在名为static的目录中　static目录要放在项目的根目录出　

                                2.所有的静态文件必须通过　/static/路径访问
                                /static/images/a.jpg






                            


